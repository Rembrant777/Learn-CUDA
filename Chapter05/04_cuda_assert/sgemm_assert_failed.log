sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [0,0,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [1,0,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [2,0,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [3,0,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [4,0,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [5,0,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [6,0,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [7,0,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [8,0,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [9,0,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [10,0,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [11,0,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [12,0,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [13,0,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [14,0,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [15,0,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [0,1,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [1,1,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [2,1,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [3,1,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [4,1,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [5,1,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [6,1,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [7,1,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [8,1,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [9,1,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [10,1,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [11,1,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [12,1,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [13,1,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [14,1,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [15,1,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [0,4,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [1,4,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [2,4,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [3,4,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [4,4,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [5,4,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [6,4,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [7,4,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [8,4,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [9,4,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [10,4,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [11,4,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [12,4,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [13,4,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [14,4,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [15,4,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [0,5,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [1,5,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [2,5,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [3,5,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [4,5,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [5,5,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [6,5,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [7,5,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [8,5,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [9,5,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [10,5,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [11,5,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [12,5,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [13,5,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [14,5,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [15,5,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [22,0,0], thread: [0,4,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [22,0,0], thread: [1,4,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [22,0,0], thread: [2,4,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [22,0,0], thread: [3,4,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [22,0,0], thread: [4,4,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [22,0,0], thread: [5,4,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [22,0,0], thread: [6,4,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [22,0,0], thread: [7,4,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [22,0,0], thread: [8,4,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [22,0,0], thread: [9,4,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [22,0,0], thread: [10,4,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [22,0,0], thread: [11,4,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [22,0,0], thread: [12,4,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [22,0,0], thread: [13,4,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [22,0,0], thread: [14,4,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [22,0,0], thread: [15,4,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [22,0,0], thread: [0,5,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [22,0,0], thread: [1,5,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [22,0,0], thread: [2,5,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [22,0,0], thread: [3,5,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [22,0,0], thread: [4,5,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [22,0,0], thread: [5,5,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [22,0,0], thread: [6,5,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [22,0,0], thread: [7,5,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [22,0,0], thread: [8,5,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [22,0,0], thread: [9,5,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [22,0,0], thread: [10,5,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [22,0,0], thread: [11,5,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [22,0,0], thread: [12,5,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [22,0,0], thread: [13,5,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [22,0,0], thread: [14,5,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [22,0,0], thread: [15,5,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [0,6,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [1,6,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [2,6,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [3,6,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [4,6,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [5,6,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [6,6,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [7,6,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [8,6,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [9,6,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [10,6,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [11,6,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [12,6,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [13,6,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [14,6,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [15,6,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [0,7,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [1,7,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [2,7,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [3,7,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [4,7,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [5,7,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [6,7,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [7,7,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [8,7,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [9,7,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [10,7,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [11,7,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [12,7,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [13,7,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [14,7,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [4,0,0], thread: [15,7,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [0,4,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [1,4,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [2,4,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [3,4,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [4,4,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [5,4,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [6,4,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [7,4,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [8,4,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [9,4,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [10,4,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [11,4,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [12,4,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [13,4,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [14,4,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [15,4,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [0,5,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [1,5,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [2,5,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [3,5,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [4,5,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [5,5,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [6,5,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [7,5,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [8,5,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [9,5,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [10,5,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [11,5,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [12,5,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [13,5,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [14,5,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [15,5,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [0,6,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [1,6,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [2,6,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [3,6,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [4,6,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [5,6,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [6,6,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [7,6,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [8,6,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [9,6,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [10,6,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [11,6,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [12,6,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [13,6,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [14,6,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [15,6,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [0,7,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [1,7,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [2,7,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [3,7,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [4,7,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [5,7,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [6,7,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [7,7,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [8,7,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [9,7,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [10,7,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [11,7,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [12,7,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [13,7,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [14,7,0] Assertion `A[row * K + col] == 0` failed.
sgemm.cu:31: void sgemm_kernel_A(const float *, const float *, float *, int, int, int, float, float): block: [10,0,0], thread: [15,7,0] Assertion `A[row * K + col] == 0` failed.